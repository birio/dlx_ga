- list generation parameters
  - opcodes
  - regs
  - imm
- seed managment
- list prob weights
- write the .asm file

- how to be sure that tests ends and how to signals the end of test
- address gen randomly means a lots of runtime error
- manage base test and user test
- update the script
  - call random_gen
  - compile
  - rom and define selection

- underline not generated instructions
- do a regression fully-random for comparing with the CGA generation

- add non implemented instructions on both rtl, checker and test generator
- investigate checker
- try to compile checker only once in run_regr
- do regression with checker enabled
- add script for clearing generated files

- evaluate the number of lines for each test
- check if seed is properly called: ensure the reproducibility

- in run_regr, arrest as soon as there is an error somewhere

